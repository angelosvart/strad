{"version":3,"sources":["js/api.js","js/CreateBox.js","js/index.js"],"names":["getText","response","fetch","method","apiData","json","err","console","log","CreateBox","constructor","text","image","init","app","document","querySelector","splitText","split","counter","push","div","createElement","classList","add","item","a","h2","img","indexOf","href","dataset","src","setAttribute","innerHTML","appendChild","h3","innerText","loadImages","querySelectorAll","imageObserver","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","target","unobserve","observe","createBox","Promise","resolve","reject","length","Error"],"mappings":";AASC,aATM,eAAeA,IACd,IACMC,MAAAA,QAAiBC,MAAM,oDAAqD,CAACC,OAAQ,QAGpFC,aAFeH,EAASI,OAGjC,MAAOC,GACLC,QAAQC,IAAI,kBAAmBF,IAEtC,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACP8B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAF/B,IAAA,EAAA,QAAA,SAEe,MAAMG,EACjBC,cACSC,KAAAA,KAAO,GACPC,KAAAA,MAAQ,kCAGXC,aACIC,MAAAA,EAAMC,SAASC,cAAc,QAI7BC,SADc,EAApB,EAAA,YACwB,GAAGC,MAAM,KAE7BC,IAAAA,EAAU,EAEPA,KAAAA,GAAW,IACE,IAAZA,GAA6B,IAAZA,EACZR,KAAAA,KAAKS,KARlB,uDAUQb,QAAQC,IAAIS,EAAUE,IACjBR,KAAAA,KAAKS,KAAKH,EAAUE,KAE7BA,IAGEE,MAAAA,EAAMN,SAASO,cAAc,OACnCD,EAAIE,UAAUC,IAAI,OAEb,IAAA,MAAMC,KAAQ,KAAKd,KAAM,CACpBe,MAAAA,EAAIX,SAASO,cAAc,KAC3BK,EAAKZ,SAASO,cAAc,MAC5BM,EAAMb,SAASO,cAAc,OAE/B,GAAA,KAAKX,KAAKkB,QAAQJ,GAAQ,EAAG,CAOzB,GANJC,EAAEH,UAAUC,IAAI,OAChBE,EAAEI,KAAF,IACAF,EAAIG,QAAQC,IAAS,GAAA,OAAA,KAAKpB,MAAgB,YAAA,OAAA,KAAKD,KAAKkB,QAAQJ,IAC5DG,EAAIK,aAAa,UAAW,QAC5BN,EAAGO,UAAYT,EACfC,EAAES,YAAYR,GACkB,IAA5B,KAAKhB,KAAKkB,QAAQJ,GAAa,CACzBW,MAAAA,EAAKrB,SAASO,cAAc,MAClCc,EAAGC,UAAY,OACfX,EAAES,YAAYC,GAElBV,EAAES,YAAYP,GACdd,EAAIqB,YAAYT,QAEhBA,EAAEH,UAAUC,IAAI,YAChBE,EAAEI,KAAF,IACAF,EAAIG,QAAQC,IAAS,GAAA,OAAA,KAAKpB,MAAgB,YAAA,OAAA,KAAKD,KAAKkB,QAAQJ,IAC5DG,EAAIK,aAAa,UAAW,QAC5BN,EAAGO,UAAYT,EACfC,EAAES,YAAYR,GACdD,EAAES,YAAYP,GACdP,EAAIc,YAAYT,GAGxBZ,EAAIqB,YAAYd,GAIpBiB,aACQA,IAAAA,EAAavB,SAASwB,iBAAiB,YAEvCC,EAAgB,IAAIC,qBAAqB,CAACC,EAASC,KACnDD,EAAQE,QAAQC,IACRA,GAAAA,EAAMC,eAAgB,CAClBlC,IAAAA,EAAQiC,EAAME,OAClBnC,EAAMoB,IAAMpB,EAAMmB,QAAQC,IAC1BQ,EAAcQ,UAAUpC,QAKpC0B,EAAWM,QAAQhC,IACf4B,EAAcS,QAAQrC,MA5EH,QAAA,QAAA;;ACA/B,aAFA,IAAA,EAAA,EAAA,QAAA,gBAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,MACUsC,MAAAA,EAAY,IAAIzC,EAAJ,QAED,IAAI0C,QAAQ,MAAOC,EAASC,WAEnCH,EAAUrC,OAEZE,SAASwB,iBAAiB,QAAQe,OAClCF,EAAQF,EAAUZ,cAElBe,EAAOE,MAAM,4BAVzB","file":"js.e9961c62.js","sourceRoot":"../src","sourcesContent":["export async function getText() {\r\n    try {\r\n        const response = await fetch(\"https://baconipsum.com/api/?type=all-meat&paras=1\", {method: 'GET'});\r\n        const apiData = await response.json();\r\n\r\n        return apiData;\r\n    } catch (err) {\r\n        console.log('Failed to fetch', err);\r\n    }\r\n}\r\n","import { getText } from './api';\r\n\r\nexport default class CreateBox {\r\n    constructor() {\r\n        this.text = [];\r\n        this.image = 'https://picsum.photos/1920/1088';\r\n    }\r\n\r\n    async init() {\r\n        const app = document.querySelector(\"#app\");\r\n        \r\n        const saleText = `Sale <br/> up to <span class=\"animate\"></span> off`;\r\n        const texts = await getText();\r\n        const splitText = texts[0].split(\" \");\r\n\r\n        let counter = 1;\r\n\r\n        while (counter <= 10) {\r\n            if (counter === 1 || counter === 6) {\r\n                this.text.push(saleText);\r\n            } else {\r\n                console.log(splitText[counter])\r\n                this.text.push(splitText[counter]);\r\n            }\r\n            counter++;\r\n        }\r\n    \r\n        const div = document.createElement(\"div\");\r\n        div.classList.add(\"box\");\r\n\r\n        for (const item of this.text) {\r\n            const a = document.createElement(\"a\");\r\n            const h2 = document.createElement(\"h2\");\r\n            const img = document.createElement(\"img\");\r\n\r\n            if (this.text.indexOf(item) < 6) {\r\n                a.classList.add(\"box\");\r\n                a.href = `#`;\r\n                img.dataset.src = `${this.image}?random=${this.text.indexOf(item)}`;\r\n                img.setAttribute(\"loading\", \"lazy\");\r\n                h2.innerHTML = item;\r\n                a.appendChild(h2); \r\n                if (this.text.indexOf(item) === 0) {\r\n                    const h3 = document.createElement(\"h3\");\r\n                    h3.innerText = \"Shop\";\r\n                    a.appendChild(h3)\r\n                }            \r\n                a.appendChild(img);\r\n                app.appendChild(a);\r\n            } else {\r\n                a.classList.add(\"box-mini\");\r\n                a.href = `#`;\r\n                img.dataset.src = `${this.image}?random=${this.text.indexOf(item)}`;\r\n                img.setAttribute(\"loading\", \"lazy\");\r\n                h2.innerHTML = item;\r\n                a.appendChild(h2);\r\n                a.appendChild(img);\r\n                div.appendChild(a);\r\n            }\r\n        }\r\n        app.appendChild(div);\r\n\r\n    }\r\n\r\n    loadImages() {\r\n        let loadImages = document.querySelectorAll(\".box img\");\r\n\r\n        let imageObserver = new IntersectionObserver((entries, observer) => {\r\n            entries.forEach(entry => {\r\n                if (entry.isIntersecting) {\r\n                    let image = entry.target;\r\n                    image.src = image.dataset.src;\r\n                    imageObserver.unobserve(image);\r\n                }\r\n            })\r\n        });\r\n\r\n        loadImages.forEach(image => {\r\n            imageObserver.observe(image)\r\n        });\r\n    }\r\n}\r\n","import CreateBox from './CreateBox';\r\n\r\n(() => {\r\n    const createBox = new CreateBox();\r\n\r\n    const initLoad = new Promise(async (resolve, reject) => {\r\n\r\n        await createBox.init();\r\n\r\n        if (document.querySelectorAll(\".box\").length) {\r\n            resolve(createBox.loadImages())\r\n        } else {\r\n            reject(Error(\"Problem loading data\"))\r\n        }\r\n    });\r\n})();"]}